# Caddyfile for Rexel Modern - Frontend & Backend
{
    # Global options
    admin off
    log default {
        output stdout
        format console
    }
}

# PRODUCTION DOMAINS

# Frontend - kesimarket.com
kesimarket.com {
    # Security headers for production
    header {
        Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
        X-Content-Type-Options nosniff
        X-Frame-Options SAMEORIGIN
        X-XSS-Protection "1; mode=block"
        Referrer-Policy "strict-origin-when-cross-origin"
        # Remove server information
        -Server
    }

    # Compress responses
    encode gzip

    # Reverse proxy to frontend container
    reverse_proxy frontend:3000 {
        header_up Host {upstream_hostport}
        header_up X-Real-IP {remote_host}
        header_up X-Forwarded-For {remote_host}
        header_up X-Forwarded-Proto {scheme}
    }

    # Access logs
    log {
        output file /var/log/caddy/frontend-access.log
        format json
    }
}

# API - api.kesimarket.com
api.kesimarket.com {
    # Security headers for production API
    header {
        Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
        X-Content-Type-Options nosniff
        X-Frame-Options DENY
        X-XSS-Protection "1; mode=block"
        Referrer-Policy "strict-origin-when-cross-origin"
        # Remove server information
        -Server
        # CORS headers for production
        Access-Control-Allow-Origin "https://kesimarket.com"
        Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS"
        Access-Control-Allow-Headers "Content-Type, Authorization"
        Access-Control-Allow-Credentials "true"
    }

    # Rate limiting for API
    rate_limit {
        zone api_zone {
            key    {remote_host}
            events 100
            window 1m
        }
    }

    # Handle file uploads with larger request body limit
    @uploads {
        path /api/files* /files*
    }
    handle @uploads {
        request_body {
            max_size 50MB
        }
        
        # Rate limiting for uploads (more restrictive)
        rate_limit {
            zone upload_zone {
                key    {remote_host}
                events 10
                window 1m
            }
        }
        
        reverse_proxy app:3333 {
            # Extended timeouts for uploads
            transport http {
                dial_timeout 60s
                response_header_timeout 60s
            }
            
            header_up Host {upstream_hostport}
            header_up X-Real-IP {remote_host}
            header_up X-Forwarded-For {remote_host}
            header_up X-Forwarded-Proto {scheme}
        }
    }

    # Handle CORS preflight requests
    @options {
        method OPTIONS
    }
    handle @options {
        respond 200
    }

    # Handle all other API routes
    reverse_proxy app:3333 {
        header_up Host {upstream_hostport}
        header_up X-Real-IP {remote_host}
        header_up X-Forwarded-For {remote_host}
        header_up X-Forwarded-Proto {scheme}
    }

    # Access logs
    log {
        output file /var/log/caddy/api-access.log
        format json
    }
}

# STAGING DOMAINS

# Frontend - staging.kesimarket.com
staging.kesimarket.com {
    # Security headers for staging
    header {
        Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
        X-Content-Type-Options nosniff
        X-Frame-Options SAMEORIGIN
        X-XSS-Protection "1; mode=block"
        Referrer-Policy "strict-origin-when-cross-origin"
        # Remove server information
        -Server
        # Staging indicator
        X-Environment "staging"
    }

    # Compress responses
    encode gzip

    # Reverse proxy to frontend container
    reverse_proxy frontend:3000 {
        header_up Host {upstream_hostport}
        header_up X-Real-IP {remote_host}
        header_up X-Forwarded-For {remote_host}
        header_up X-Forwarded-Proto {scheme}
    }

    # Access logs
    log {
        output file /var/log/caddy/staging-frontend-access.log
        format json
    }
}

# API - staging-api.kesimarket.com
staging-api.kesimarket.com {
    # Security headers for staging API
    header {
        Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
        X-Content-Type-Options nosniff
        X-Frame-Options DENY
        X-XSS-Protection "1; mode=block"
        Referrer-Policy "strict-origin-when-cross-origin"
        # Remove server information
        -Server
        # Staging indicator
        X-Environment "staging"
        # CORS headers for staging
        Access-Control-Allow-Origin "https://staging.kesimarket.com"
        Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS"
        Access-Control-Allow-Headers "Content-Type, Authorization"
        Access-Control-Allow-Credentials "true"
    }

    # Rate limiting for staging API (more permissive)
    rate_limit {
        zone staging_api_zone {
            key    {remote_host}
            events 200
            window 1m
        }
    }

    # Handle file uploads with larger request body limit
    @uploads {
        path /api/files* /files*
    }
    handle @uploads {
        request_body {
            max_size 50MB
        }
        
        # Rate limiting for uploads (more permissive for staging)
        rate_limit {
            zone staging_upload_zone {
                key    {remote_host}
                events 20
                window 1m
            }
        }
        
        reverse_proxy app:3333 {
            # Extended timeouts for uploads
            transport http {
                dial_timeout 60s
                response_header_timeout 60s
            }
            
            header_up Host {upstream_hostport}
            header_up X-Real-IP {remote_host}
            header_up X-Forwarded-For {remote_host}
            header_up X-Forwarded-Proto {scheme}
        }
    }

    # Handle CORS preflight requests
    @options {
        method OPTIONS
    }
    handle @options {
        respond 200
    }

    # Handle all other API routes
    reverse_proxy app:3333 {
        header_up Host {upstream_hostport}
        header_up X-Real-IP {remote_host}
        header_up X-Forwarded-For {remote_host}
        header_up X-Forwarded-Proto {scheme}
    }

    # Access logs
    log {
        output file /var/log/caddy/staging-api-access.log
        format json
    }
}

# DEVELOPMENT - Local port 80
:80 {
    # Handle health check
    handle /health {
        respond "healthy" 200
    }

    # Handle API routes (for local development)
    handle /api/* {
        # Reverse proxy to backend
        reverse_proxy app:3333 {
            header_up Host {upstream_hostport}
            header_up X-Real-IP {remote_host}
            header_up X-Forwarded-For {remote_host}
            header_up X-Forwarded-Proto {scheme}
        }
    }

    # Handle file uploads with larger request body limit
    handle /api/files* {
        request_body {
            max_size 50MB
        }
        
        reverse_proxy app:3333 {
            transport http {
                dial_timeout 60s
                response_header_timeout 60s
            }
            
            header_up Host {upstream_hostport}
            header_up X-Real-IP {remote_host}
            header_up X-Forwarded-For {remote_host}
            header_up X-Forwarded-Proto {scheme}
        }
    }

    # Security headers for development
    header {
        -Server
        X-Content-Type-Options nosniff
        X-Frame-Options DENY
        X-XSS-Protection "1; mode=block"
        Referrer-Policy "strict-origin-when-cross-origin"
        X-Robots-Tag "noindex, nofollow"
        
        # CORS headers for development
        Access-Control-Allow-Origin "http://localhost:3000"
        Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS"
        Access-Control-Allow-Headers "Content-Type, Authorization"
        Access-Control-Allow-Credentials "true"
    }

    # Handle CORS preflight requests
    @options {
        method OPTIONS
    }
    handle @options {
        respond 200
    }

    # Logging for development
    log {
        output stdout
        format console
    }
} 