services:
  # AdonisJS Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '${PORT:-3333}:${PORT:-3333}'
    env_file:
      - .env
    volumes:
      - .:/app
      - /app/node_modules
      - uploads:/app/uploads
    # command: sh -c "node ace migration:run --force && node ace db:seed && npm run start"
    depends_on:
      - db
      - redis
      - minio
      - typesense

  # PostgreSQL Database
  db:
    image: postgres:16-alpine
    ports:
      - '${DB_PORT:-5432}:5432'
    environment:
      - POSTGRES_USER=kesimarket_user
      - POSTGRES_PASSWORD=kesimarket_postgres_password
      - POSTGRES_DB=kesimarket
      - POSTGRES_HOST=db
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    env_file:
      - .env
    ports:
      - '${MINIO_PORT:-9000}:9000' # API
      - '${MINIO_CONSOLE_PORT:-9001}:9001' # Console
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER:-minioadmin}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD:-minioadmin123}
    volumes:
      - minio_data:/data

  # Redis Cache (optionnel pour plus tard)
  redis:
    image: redis:7-alpine
    ports:
      - '${REDIS_PORT:-6379}:6379'
    env_file:
      - .env
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis123}
    volumes:
      - redis_data:/data

  # Typesense Search Engine
  typesense:
    image: typesense/typesense:27.0
    ports:
      - '${TYPESENSE_PORT:-8108}:8108'
    environment:
      - TYPESENSE_DATA_DIR=/data
      - TYPESENSE_API_KEY=${TYPESENSE_API_KEY:-xyz}
      - TYPESENSE_ENABLE_CORS=true
    volumes:
      - typesense_data:/data

volumes:
  postgres_data:
  redis_data:
  minio_data:
  typesense_data:
  uploads:
